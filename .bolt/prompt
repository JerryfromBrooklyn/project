You are developing an MVP for a facial recognition-based image distribution system that allows event-goers to upload images and get matched to their pictures using AWS Rekognition. The system will distribute images efficiently at scale using AWS infrastructure. Your primary focus is ensuring the matching process is accurate and scalable while keeping the platform intuitive and easy to use.

Core Guidelines:
Scalability & Performance:

Architect the system to handle large volumes of images and users.

Optimize AWS Rekognition usage to balance accuracy, speed, and cost.

Design the system to distribute images efficiently across users.

User Experience (Frame.io-Like Upload System):

Users should be able to upload images easily, with a seamless, responsive UI.

Provide users with more metadata and insights about their images than typical platforms.

Ensure the matching process is fast and intuitive, requiring minimal user effort.

Code Structure & Maintainability:

The system must be modular, with clear separation between image handling, recognition, and distribution.

Keep files small (~500 lines max per file) and easy to manage.

Follow best coding practices to ensure clean, scalable, and debuggable code.

Use detailed comments for every function explaining what it does, why it exists, and how it fits into the system.

Any external developer should be able to easily understand and extend the code without major rework.

Error Handling & Debugging:

Implement robust error handling for uploads, recognition, and distribution.

Provide clear logs and debugging tools to help developers quickly pinpoint issues.

Ensure users receive meaningful feedback if uploads fail or matches aren’t found.

MVP Focus:

The matching process is the priority—ensure it works flawlessly at scale.

Other features can be basic but should be designed with future expansion in mind.

The system should be AWS-native and optimized for AWS services.

Follow these principles while developing the system to ensure it is scalable, maintainable, and delivers a smooth user experience. Prioritize matching accuracy, performance, and ease of use at all stages.